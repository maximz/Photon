A favicon (short for Favorite icon), also known as a shortcut icon, Web site icon, URL icon, or bookmark icon, is a file containing one or more small icons, most commonly 16×16 pixels, associated with a particular Web site or Web page. A web designer can create such an icon and install it into a Web site (or Web page) by several means, and graphical web browsers will then make use of it. Browsers that provide favicon support typically display a page's favicon in the browser's address bar and next to the page's name in a list of bookmarks. Browsers that support a tabbed document interface typically show a page's favicon next to the page's title on the tab, and site-specific browsers use the favicon as desktop icon.
History.
In March 1999, Microsoft released Internet Explorer 5 which supported favicons for the first time. Originally, the favicon was a file called codice_1 placed in the root directory (e.g., http://en.wikipedia.org/favicon.ico) of a web site. It was used in Internet Explorer's "favorites" (bookmarks) and next to the URL in the address bar if the page was bookmarked. A side effect was that the number of visitors who have bookmarked the page could be estimated by the requests of the favicon. This side effect no longer works, as all modern browsers support the favicon without bookmarking.
Standardization.
The favicon was standardized by the World Wide Web Consortium (W3C) in the HTML 4.01 recommendation, released in December 1999, and later in the XHTML 1.0 recommendation, released in January 2000. The standards use a link element with a codice_2 attribute in the codice_3 section of the document to specify the file format, file name and a location can be specified for any Web site directory. The consequences were that the use of a "reserved location" on a Web site is no longer required and the favicon file can be located anywhere in the Web directory tree and any image file format can be used.
In 2003, the codice_4 format was registered with the Internet Assigned Numbers Authority (IANA) under the MIME type codice_5. When using the codice_4 format, Internet Explorer cannot display files served with the standardized MIME type. A workaround for Internet Explorer is to associate codice_4 with the non-standard codice_8 MIME type in Web servers.
RFC 5988 established an IANA link relation registry,
and codice_9 was registered in 2010 based on the HTML5 specification. The popular <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico"> theoretically identifies two relations, "codice_10" and "codice_11", but "codice_10" is not registered and is redundant. In 2011 the HTML living standard specified that for historical reasons "codice_10" is allowed immediately before "codice_11"; however, "codice_10" does not have a meaning in this context.
Legacy.
Microsoft Internet Explorer only supports the ICO file format; simply changing the filename extension of an image to codice_4 without converting it to an ICO file will result in an error and not displaying the favicon. Netscape 7 and Internet Explorer versions 5 and 6 browsers will only display the favicon when the page is bookmarked and not simply when the page is visited as in later browsers.
Browser implementation.
The following table illustrates major web browsers supporting different features. The version numbers indicate the starting version of a supported feature.
File format support.
The following table illustrates the image file format support for the favicon.
Additionally, such icon files can be 16×16, 32×32, 48×48, or 64×64 pixels in size, and 8-bit, 24-bit, or 32-bit in color depth. The ICO file format article explains the details for icons with more than 256 colors on various Microsoft Windows platforms.
Use of favicon.
This table illustrates the different possibilities where favicons can be displayed.
Opera Software added the ability to change the favicon in the Speed Dial in Opera 10.
Some common browsers stopped using the favicon in the address bar, because this place will be used to show the type of the pages.
How to use.
This table illustrates the different ways the favicon can be recognized by the web browser.
Only SeaMonkey doesn’t fetch codice_1 files in the web site’s root by default.
Device support.
For Apple devices with the iOS operating system version 1.1.3 or later, such as the iPod Touch, iPhone, and iPad, as well as some Android devices, one can provide a custom icon that users can display on their Home screens using the "Web Clip" feature (called "Add to Home Screen" within Mobile Safari). This feature is enabled by supplying a codice_18 in the codice_3 section of documents served by the web site. If the custom icon is not provided, a thumbnail of the web page will be put on the home screen instead.
The recommended basic size for this icon is 57×57 pixels, with 90-degree corners; for best display on the higher-resolution iPhone 4 screen, an icon size of 114×114 pixels is recommended.
For the iPad and iPad 2, the basic size is 72×72 pixels with 90-degree corners. For the third-generation iPad, the high-resolution size would be 144×144 pixels.
The icon file referenced by codice_20 is modified to add rounded corners, drop shadow, and reflective shine. Alternatively, an codice_21 icon may be provided to instruct devices not to apply reflective shine on the image.
As in case of codice_1 file, browsers and mobile devices do not require any HTML to retrieve these icons. Default location for the files are codice_23 and codice_24 (in order of priority) located in the web site's root.
HTML5 recommendation for icons in multiple sizes.
The current HTML5 specification recommends specifying size icons in multiple sizes using the attributes codice_25 within a codice_26 tag. Multiple icon formats, including container formats such as Microsoft .ico and Macintosh .icns files, as well as Scalable Vector Graphics may be provided by including the icon's content type in the form of codice_27 within the codice_26 tag.
Apple mobile devices running iOS 5 and above ignore the HTML5 recommendation and use the proprietary codice_20 method detailed above. The Google Chrome web browser however, will select the closest matching size from those provided in the HTML headers to create 128×128 pixel application icons when the user chooses the "Create application shortcuts..." from the "Tools" menu.
Limitations and criticism.
Due to the need to always check for it in a fixed location, the favicon will create extra traffic and garbage 404 entries in the server log if it is nonexistent.
Some old browsers such as the Internet Explorer for Mac did not support the favicon or had problems in updating the favicon if a new one was uploaded. Another disadvantage was that some web hosts did not allow the use of ico files.
The W3C recommendation only works in HTML or XHTML and not in other systems such as gopher. The W3C did not standardize the rel-attribute so there are other key words such as "shortcut icon" that are also accepted by the user agent.
Favicons are often manipulated as part of phishing or eavesdropping attacks against HTTPS webpages. Many web browsers display favicons near areas of the web browser's UI, such as the address bar, that are used to convey whether the connection to a website is using a secure protocol like SSL. By changing the favicon to a familiar padlock image an attacker can attempt to trick the user into thinking they are securely connected to the proper website. Automated man-in-the-middle attack tools such as SSLStrip utilize this trick. In order to eliminate this, some web browsers display the favicon within the tab whilst displaying the security status of the protocol used to access the website beside the URL.
